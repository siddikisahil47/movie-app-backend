# Component configuration for the Flask Movie API service
componentName: movie-api-backend
version: 1.0.0
buildSpec:
  source:
    # Use Python as the base image
    image: python:3.9
  
  # Build configuration
  build:
    # Install dependencies
    commands:
      - pip install --no-cache-dir -r requirements.txt
      
  # Configure environment variables
  env:
    - name: MONGODB_URI
      required: true
      sensitive: true
    - name: SECRET_KEY
      required: true
      sensitive: true
    - name: DEBUG
      value: "False"
    - name: API_VERSION
      value: "v1"
    - name: FLASK_APP
      value: "app.py"
    - name: FLASK_ENV
      value: "production"

# Runtime configuration  
deploy:
  # Use Gunicorn as the production server
  command: gunicorn --bind :8080 --workers 2 --threads 4 --timeout 0 --access-logfile - --error-logfile - app:app
  
  # Configure the container
  container:
    # Port configuration
    ports:
      - name: http
        containerPort: 8080
        servicePort: 80
        protocol: TCP
    
    # Resource limits
    resources:
      limits:
        cpu: "1.0"
        memory: "512Mi"
      requests:
        cpu: "0.5"
        memory: "256Mi"
    
    # Health check configuration  
    probes:
      liveness:
        httpGet:
          path: /health
          port: http
        initialDelaySeconds: 15
        periodSeconds: 30
        timeoutSeconds: 5
        failureThreshold: 3
      readiness:
        httpGet:
          path: /health
          port: http
        initialDelaySeconds: 15
        periodSeconds: 30
        timeoutSeconds: 5
        failureThreshold: 3

# Configure API endpoints
api:
  type: "REST" 
  basePath: /api/v1
  cors:
    enabled: true
    allowOrigins:
      - "*"
    allowMethods:
      - GET
      - POST
      - PUT
      - DELETE
    allowHeaders:
      - Content-Type
      - Authorization
  endpoints:
    - name: movies
      basePath: /movies
      security:
        enabled: false
      rateLimit:
        requestsPerUnit: 100
        unit: MINUTE
    - name: genres
      basePath: /genres
      security:
        enabled: false
    - name: streaming
      basePath: /platforms
      security:
        enabled: false

# Configure observability
observability:
  metrics:
    enabled: true
    exporters:
      - prometheus
  logging:
    enabled: true
    level: INFO
    format: json

# Configure scaling
scale:
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
